# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include: 
      - '*'
    exclude: 
      - 'refs/tags/*'
  paths:
    include:
      - '*'
    exclude:
     - README.md
     - appveyor.yml

pr:
- dev
- master
- release

name: $(Build.BuildId)

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  dotNetCoreVersion: '3.0.*'

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use latest NuGet'
  inputs:
    checkLatest: true

#- task: UseDotNet@2
#  displayName: 'Use dotnet sdk 3.0.100-preview'
#  inputs:
#    packageType: 'sdk'
#    version: '3.0.100-preview9-014004'
#    includePreviewVersions: true

- task: UseDotNet@2
  displayName: 'Use dotNet $(dotNetCoreVersion)'
  inputs:
    packageType: 'sdk'
    version: '$(dotNetCoreVersion)'

- powershell: .\build\Install-WindowsSDK.ps1
  displayName: 'Install Windows SDK 10.0.16299'

- powershell: .\src\build.ps1 -Script .\src\build.cake --bootstrap
  displayName: 'Build: cake (bootstrap)'

- powershell: .\src\build.ps1 -Script .\src\build.cake -target azure -artifact-dir='$(Build.ArtifactStagingDirectory)'
  displayName: 'Build: cake'

- task: PublishBuildArtifacts@1
  displayName: 'Save package artifacts'
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: Package

- task: NuGetCommand@2
  displayName: 'Publish to internal nuget feed'
  inputs:
    command: push
    nuGetFeedType: internal
    publishVstsFeed: MahApps.Metro.IconPacks
